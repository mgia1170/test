Atomic:Util.DownloadFile.FTP
'Atomic:Util.DownloadFile.FTP' Version: 'Unversioned' Label: '' applied to 'Testable Device' 
	'Get input data' applied to 'Testable Device' 
		$udfftpHostIP = $udfftpHostIP
		[<Operation>,<Mediums.OperationType>,<Expression>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpHostIP</VarName>    <Expression>$udfftpHostIP</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpHostIP</VarName>    <Expression>$udfftpHostIP</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>]
		$udfftpFileToDownload = $udfftpFileToDownload
		[<Operation>,<Mediums.OperationType>,<Expression>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpFileToDownload</VarName>    <Expression>$udfftpFileToDownload</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpFileToDownload</VarName>    <Expression>$udfftpFileToDownload</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>]
		$udfftpUsername = $udfftpUsername
		[<Operation>,<Mediums.OperationType>,<Expression>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpUsername</VarName>    <Expression>$udfftpUsername</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpUsername</VarName>    <Expression>$udfftpUsername</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>]
		$udfftpPassword = $udfftpPassword
		[<Operation>,<Mediums.OperationType>,<Expression>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpPassword</VarName>    <Expression>$udfftpPassword</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <VarName>udfftpPassword</VarName>    <Expression>$udfftpPassword</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>]
	//
	[<Comment>,<Mediums.CommentType>,<Comment>,<CommentParameter;//;>,<CommentParameter;//;>]
	'Initialize variables' applied to 'Testable Device' 
		#udfftpFileContent = array()
		[<Operation>,<Mediums.OperationType>,<Expression>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <IsArray>true</IsArray>    <VarName>udfftpFileContent</VarName>    <Expression>array()</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <IsArray>true</IsArray>    <VarName>udfftpFileContent</VarName>    <Expression>array()</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>]
	//
	[<Comment>,<Mediums.CommentType>,<Comment>,<CommentParameter;//;>,<CommentParameter;//;>]
	'Download the file' applied to 'Testable Device' 
		IronPython : from System import *  from Sys
		[<Iron Script Medium>,<IronScript.Medium.IronScriptMedium>,<>,<ScriptType;IronPython;ScriptValue;from System import *  from System.Collections.Generic import *  from System.IO import *  from System.Net import *  from System.Text import *  from System.Globalization import *    # get host IP address from AutoMOTO  host = get("$udfftpHostIP").value    # get the name and path to the file that needs to be downloaded  filename = get("$udfftpFileToDownload").value  # replace \\ with / in the filepath  filename = filename.replace("\\\\", "/")    # get username and password from AutoMOTO  username = get("$udfftpUsername").value  password = get("$udfftpPassword").value    #create web request, login and download the file  request = WebRequest.Create("ftp://"+host + "/" +filename)  request.Method = WebRequestMethods.Ftp.DownloadFile  request.Credentials = NetworkCredential(username, password)  request.UsePassive = False  response = request.GetResponse()  responseStream = response.GetResponseStream()    # read the file  reader = StreamReader(responseStream)\;    # put the content of the file into a list  fileContent = []    while (reader.Peek() >= 0):   content = reader.ReadLine()    fileContent.append(content)     reader.Close()  response.Close()    # return the content of the file back to AutoMOTO  set("#udfftpFileContent", fileContent);974D3650-8B31-4Y45-C003-997F0F1DC65C;;874D2560-8E31-4D45-B008-699F0F1DC68C;;_ArArrayName4d6b-9993-b660a90b157b;;ActResCaptureExtMode{ABFB70BE-AEB4-47db-AD8F-00390B8C14BE};;Timeout_{bc7669c8-4303-4969-9ec7-7171e18766c5};;>,<ScriptType;IronPython;ScriptValue;from System import *  from System.Collections.Generic import *  from System.IO import *  from System.Net import *  from System.Text import *  from System.Globalization import *    # get host IP address from AutoMOTO  host = get("$udfftpHostIP").value    # get the name and path to the file that needs to be downloaded  filename = get("$udfftpFileToDownload").value  # replace \\ with / in the filepath  filename = filename.replace("\\\\", "/")    # get username and password from AutoMOTO  username = get("$udfftpUsername").value  password = get("$udfftpPassword").value    #create web request, login and download the file  request = WebRequest.Create("ftp://"+host + "/" +filename)  request.Method = WebRequestMethods.Ftp.DownloadFile  request.Credentials = NetworkCredential(username, password)  request.UsePassive = False  response = request.GetResponse()  responseStream = response.GetResponseStream()    # read the file  reader = StreamReader(responseStream)\;    # put the content of the file into a list  fileContent = []    while (reader.Peek() >= 0):   content = reader.ReadLine()    fileContent.append(content)     reader.Close()  response.Close()    # return the content of the file back to AutoMOTO  set("#udfftpFileContent", fileContent);974D3650-8B31-4Y45-C003-997F0F1DC65C;;874D2560-8E31-4D45-B008-699F0F1DC68C;;_ArArrayName4d6b-9993-b660a90b157b;;ActResCaptureExtMode{ABFB70BE-AEB4-47db-AD8F-00390B8C14BE};;Timeout_{bc7669c8-4303-4969-9ec7-7171e18766c5};;>]
	//
	[<Comment>,<Mediums.CommentType>,<Comment>,<CommentParameter;//;>,<CommentParameter;//;>]
	'Print file content' applied to 'Testable Device' 
		print_array(#udfftpFileContent)
		[<Operation>,<Mediums.OperationType>,<Expression>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <IsAssignment>false</IsAssignment>    <VarName />    <Expression>print_array(#udfftpFileContent)</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>,<Operation;<?xml version="1.0" encoding="utf-16"?>  <MathExpressionOperation>    <IsAssignment>false</IsAssignment>    <VarName />    <Expression>print_array(#udfftpFileContent)</Expression>  </MathExpressionOperation>;ResolvedExpression;;Result;;ResolvedPattern;;Error;;>]
End
